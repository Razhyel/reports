DO
$$

	DECLARE _ORIGEM VARCHAR;
	DECLARE _DESTINO VARCHAR;
	
BEGIN
	_ORIGEM = '8888';
	_DESTINO = '007';         
		
-- TABELAS TEMPORARIAS COM OS REGISTROS DOS CONJUNTOS

	RAISE NOTICE 'INICIA A CRIAÇÃO DE TABELAS TEMPORÁRIAS COM OS REGISTROS DE CONJUNTOS';
	
	RAISE NOTICE '%', 'CRIANDO TABELA TEMPORÁRIA COM OS REGISTROS DE CONJUNTOS DE CLIENTES DO ESTABELECIMENTO ' ||_ORIGEM;
	CREATE TEMP TABLE tmpconjuntosclientes AS 
		SELECT DISTINCT registro FROM ns.conjuntosclientes WHERE conjunto =
			(SELECT conjunto from ns.estabelecimentosconjuntos WHERE cadastro = 6 AND estabelecimento =
				(SELECT estabelecimento FROM ns.estabelecimentos WHERE codigo = _ORIGEM)) ;
			
	RAISE NOTICE '%', 'CRIANDO TABELA TEMPORÁRIA COM OS REGISTROS DE CONJUNTOS DE FICHAS DO ESTABELECIMENTO ' ||_ORIGEM;
	CREATE TEMP TABLE tmpconjuntosfichas AS 
		SELECT DISTINCT registro FROM ns.conjuntosfichas WHERE conjunto =
			(SELECT conjunto from ns.estabelecimentosconjuntos WHERE cadastro = 5 AND estabelecimento = 
				(SELECT estabelecimento FROM ns.estabelecimentos WHERE codigo = _ORIGEM)) ; 
						
	RAISE NOTICE '%', 'CRIANDO TABELA TEMPORÁRIA COM OS REGISTROS DE CONJUNTOS DE FORNECEDORES DO ESTABELECIMENTO ' ||_ORIGEM;
	CREATE TEMP TABLE tmpconjuntosfornecedores AS 
		SELECT DISTINCT registro FROM ns.conjuntosfornecedores WHERE conjunto =
			(SELECT conjunto from ns.estabelecimentosconjuntos WHERE cadastro = 7 AND estabelecimento = 
				(SELECT estabelecimento FROM ns.estabelecimentos WHERE codigo = _ORIGEM)) ;
			
	RAISE NOTICE '%', 'CRIANDO TABELA TEMPORÁRIA COM OS REGISTROS DE CONJUNTOS DE PRODUTOS DO ESTABELECIMENTO ' ||_ORIGEM;
	CREATE TEMP TABLE tmpconjuntosprodutos AS 
		SELECT DISTINCT registro FROM ns.conjuntosprodutos WHERE conjunto =
			(SELECT conjunto from ns.estabelecimentosconjuntos WHERE cadastro = 0 AND estabelecimento = 
				(SELECT estabelecimento FROM ns.estabelecimentos WHERE codigo = _ORIGEM)) ;

	RAISE NOTICE '%', 'CRIANDO TABELA TEMPORÁRIA COM OS REGISTROS DE CONJUNTOS DE SERVIÇOS DO ESTABELECIMENTO ' ||_ORIGEM;
	CREATE TEMP TABLE tmpconjuntosservicos AS 
		SELECT DISTINCT registro FROM ns.conjuntosservicos WHERE conjunto =
			(SELECT conjunto from ns.estabelecimentosconjuntos WHERE cadastro = 3 AND estabelecimento = 
				(SELECT estabelecimento FROM ns.estabelecimentos WHERE codigo = _ORIGEM)) ;

	RAISE NOTICE '%', 'CRIANDO TABELA TEMPORÁRIA COM OS REGISTROS DE CONJUNTOS DE TRANSPORTADORAS DO ESTABELECIMENTO ' ||_ORIGEM;
	CREATE TEMP TABLE tmpconjuntostransportadoras AS 
		SELECT DISTINCT registro FROM ns.conjuntostransportadoras WHERE conjunto =
			(SELECT conjunto from ns.estabelecimentosconjuntos WHERE cadastro = 8 AND estabelecimento = 
				(SELECT estabelecimento FROM ns.estabelecimentos WHERE codigo = _ORIGEM)) ;

	RAISE NOTICE '%', 'CRIANDO TABELA TEMPORÁRIA COM OS REGISTROS DE CONJUNTOS DE UNIDADES DO ESTABELECIMENTO ' ||_ORIGEM;
	CREATE TEMP TABLE tmpconjuntosunidades AS 
		SELECT DISTINCT registro FROM ns.conjuntosunidades WHERE conjunto =
			(SELECT conjunto from ns.estabelecimentosconjuntos WHERE cadastro = 1 AND estabelecimento = 
				(SELECT estabelecimento FROM ns.estabelecimentos WHERE codigo = _ORIGEM)) ;
			
-- EXCLUSÃO DOS VINCULOS DE CONJUNTOS E REGISTROS DO ESTABELECIMENTO ORIGEM
	RAISE NOTICE '%', 'EXCLUINDO OS VINCULOS DE CONJUNTOS E REGISTROS DO ESTABELECIMENTO '|| _ORIGEM ;

	DELETE FROM  ns.conjuntosclientes WHERE conjunto = 
		(SELECT conjunto from ns.estabelecimentosconjuntos WHERE cadastro = 6 AND estabelecimento = 
			(SELECT estabelecimento FROM ns.estabelecimentos WHERE codigo = _ORIGEM)) ;
		
	DELETE FROM  ns.conjuntosfichas WHERE conjunto =
		(SELECT conjunto from ns.estabelecimentosconjuntos WHERE cadastro = 5 AND estabelecimento = 
			(SELECT estabelecimento FROM ns.estabelecimentos WHERE codigo = _ORIGEM)) ;
		
	DELETE FROM  ns.conjuntosfornecedores WHERE conjunto =
		(SELECT conjunto from ns.estabelecimentosconjuntos WHERE cadastro = 7 AND estabelecimento = 
			(SELECT estabelecimento FROM ns.estabelecimentos WHERE codigo = _ORIGEM)) ;
	
	DELETE FROM  ns.conjuntosprodutos WHERE conjunto =
		(SELECT conjunto from ns.estabelecimentosconjuntos WHERE cadastro = 0 AND estabelecimento = 
			(SELECT estabelecimento FROM ns.estabelecimentos WHERE codigo = _ORIGEM)) ;
	
	DELETE FROM  ns.conjuntosservicos WHERE conjunto =
		(SELECT conjunto from ns.estabelecimentosconjuntos WHERE cadastro = 3 AND estabelecimento = 
			(SELECT estabelecimento FROM ns.estabelecimentos WHERE codigo = _ORIGEM)) ;
	
	DELETE FROM  ns.conjuntostransportadoras WHERE conjunto =
		(SELECT conjunto from ns.estabelecimentosconjuntos WHERE cadastro = 8 AND estabelecimento = 
			(SELECT estabelecimento FROM ns.estabelecimentos WHERE codigo = _ORIGEM)) ;
	
	DELETE FROM  ns.conjuntosunidades WHERE conjunto =
		(SELECT conjunto from ns.estabelecimentosconjuntos WHERE cadastro = 1 AND estabelecimento = 
			(SELECT estabelecimento FROM ns.estabelecimentos WHERE codigo = _ORIGEM)) ;

--ATUALIZA CONJUNTOS DO ESTABELECIMENTO
	RAISE NOTICE '%', 'ATUALIZANDO CONJUNTOS DO ESTABELECIMENTO '|| _ORIGEM ||' PARA O ESTABELECIMENTO ' || _DESTINO;
	UPDATE ns.estabelecimentosconjuntos
		SET conjunto = conjuntos.conjunto
	FROM ns.conjuntos
	WHERE estabelecimentosconjuntos.cadastro = conjuntos.cadastro
		AND estabelecimentosconjuntos.estabelecimento = (select estabelecimento from ns.estabelecimentos where codigo=_ORIGEM)
		AND conjuntos.descricao = _DESTINO||_DESTINO
		AND conjuntos.cadastro <> 13;

-- RECRIA OS CONJUNTOS
	RAISE NOTICE 'RECRIANDO VINCULOS DE CONJUNTOS E REGISTROS';

	RAISE NOTICE 'CONJUNTO DE FORNECEDORES';
	
	INSERT INTO NS.CONJUNTOSFORNECEDORES(REGISTRO, CONJUNTO)
	SELECT REGISTRO, ESTABELECIMENTOSCONJUNTOS.CONJUNTO
	FROM NS.ESTABELECIMENTOSCONJUNTOS, tmpconjuntosfornecedores
	WHERE ESTABELECIMENTOSCONJUNTOS.CADASTRO = 7
	AND ESTABELECIMENTOSCONJUNTOS.ESTABELECIMENTO=(SELECT ESTABELECIMENTO FROM NS.ESTABELECIMENTOS WHERE CODIGO = _ORIGEM)
	-- VERIFICA SE O REGISTRO JÁ NÃO EXISTE NO CONJUNTO DE DESTINO PELO ID
	AND REGISTRO NOT IN (
		SELECT REGISTRO FROM NS.CONJUNTOSFORNECEDORES C
		JOIN NS.ESTABELECIMENTOSCONJUNTOS EC ON (EC.CONJUNTO = C.CONJUNTO)
		WHERE EC.CADASTRO=7 AND EC.ESTABELECIMENTO = (SELECT ESTABELECIMENTO FROM NS.ESTABELECIMENTOS WHERE CODIGO= _DESTINO))
	-- VERIFICA SE O REGISTRO JÁ NÃO EXISTE NO CONJUNTO DE FORNECEDORES DO DESTINO PELO CNPJ
	AND REGISTRO NOT IN (
		SELECT ID FROM NS.PESSOAS
		WHERE CNPJ NOT IN (
			SELECT CNPJ FROM NS.PESSOAS WHERE ID IN (
				SELECT REGISTRO FROM NS.CONJUNTOSFORNECEDORES C
				JOIN NS.ESTABELECIMENTOSCONJUNTOS EC ON (EC.CONJUNTO = C.CONJUNTO)
				WHERE EC.CADASTRO=7 AND EC.ESTABELECIMENTO = (SELECT ESTABELECIMENTO FROM NS.ESTABELECIMENTOS WHERE CODIGO= _DESTINO))));
	--
	
	RAISE NOTICE 'CONJUNTO DE CLIENTES';
	
	INSERT INTO NS.CONJUNTOSCLIENTES(REGISTRO, CONJUNTO)
	SELECT REGISTRO, ESTABELECIMENTOSCONJUNTOS.CONJUNTO
	FROM NS.ESTABELECIMENTOSCONJUNTOS, tmpconjuntosclientes
	WHERE ESTABELECIMENTOSCONJUNTOS.CADASTRO = 6
	AND ESTABELECIMENTOSCONJUNTOS.ESTABELECIMENTO=(SELECT ESTABELECIMENTO FROM NS.ESTABELECIMENTOS WHERE CODIGO = _ORIGEM)
	-- VERIFICA SE O REGISTRO JÁ NÃO EXISTE NO CONJUNTO DE DESTINO PELO ID
	AND REGISTRO NOT IN (
		SELECT REGISTRO FROM NS.CONJUNTOSCLIENTES C
		JOIN NS.ESTABELECIMENTOSCONJUNTOS EC ON (EC.CONJUNTO = C.CONJUNTO)
		WHERE EC.CADASTRO=6 AND EC.ESTABELECIMENTO = (SELECT ESTABELECIMENTO FROM NS.ESTABELECIMENTOS WHERE CODIGO= _DESTINO))
	-- VERIFICA SE O REGISTRO JÁ NÃO EXISTE NO CONJUNTO DE CLIENTES DO DESTINO PELO CNPJ
	AND REGISTRO NOT IN (
		SELECT ID FROM NS.PESSOAS
		WHERE CNPJ NOT IN (
			SELECT CNPJ FROM NS.PESSOAS WHERE ID IN (
				SELECT REGISTRO FROM NS.CONJUNTOSCLIENTES C
				JOIN NS.ESTABELECIMENTOSCONJUNTOS EC ON (EC.CONJUNTO = C.CONJUNTO)
				WHERE EC.CADASTRO=6 AND EC.ESTABELECIMENTO = (SELECT ESTABELECIMENTO FROM NS.ESTABELECIMENTOS WHERE CODIGO= _DESTINO))));
	--
	
	RAISE NOTICE 'CONJUNTO DE FICHAS';
	
	INSERT INTO NS.CONJUNTOSFICHAS(REGISTRO, CONJUNTO)
	SELECT REGISTRO, ESTABELECIMENTOSCONJUNTOS.CONJUNTO
	FROM NS.ESTABELECIMENTOSCONJUNTOS, tmpconjuntosfichas
	WHERE ESTABELECIMENTOSCONJUNTOS.CADASTRO = 5
	AND ESTABELECIMENTOSCONJUNTOS.ESTABELECIMENTO=(SELECT ESTABELECIMENTO FROM NS.ESTABELECIMENTOS WHERE CODIGO = _ORIGEM)
	-- VERIFICA SE O REGISTRO JÁ NÃO EXISTE NO CONJUNTO DE DESTINO PELO ID
	AND REGISTRO NOT IN (
		SELECT REGISTRO FROM NS.CONJUNTOSFICHAS C
		JOIN NS.ESTABELECIMENTOSCONJUNTOS EC ON (EC.CONJUNTO = C.CONJUNTO)
		WHERE EC.CADASTRO=5 AND EC.ESTABELECIMENTO = (SELECT ESTABELECIMENTO FROM NS.ESTABELECIMENTOS WHERE CODIGO= _DESTINO))
	-- VERIFICA SE O REGISTRO JÁ NÃO EXISTE NO CONJUNTO DE FICHAS DO DESTINO PELO CNPJ
	AND REGISTRO NOT IN (
		SELECT ID FROM NS.PESSOAS
		WHERE CNPJ NOT IN (
			SELECT CNPJ FROM NS.PESSOAS WHERE ID IN (
				SELECT REGISTRO FROM NS.CONJUNTOSFICHAS C
				JOIN NS.ESTABELECIMENTOSCONJUNTOS EC ON (EC.CONJUNTO = C.CONJUNTO)
				WHERE EC.CADASTRO=5 AND EC.ESTABELECIMENTO = (SELECT ESTABELECIMENTO FROM NS.ESTABELECIMENTOS WHERE CODIGO= _DESTINO))));
	--
	
	RAISE NOTICE 'CONJUNTO DE TRANSPORTADORAS';
	
	INSERT INTO NS.CONJUNTOSTRANSPORTADORAS(REGISTRO, CONJUNTO)
	SELECT REGISTRO, ESTABELECIMENTOSCONJUNTOS.CONJUNTO
	FROM NS.ESTABELECIMENTOSCONJUNTOS, tmpconjuntostransportadoras
	WHERE ESTABELECIMENTOSCONJUNTOS.CADASTRO = 8
	AND ESTABELECIMENTOSCONJUNTOS.ESTABELECIMENTO=(SELECT ESTABELECIMENTO FROM NS.ESTABELECIMENTOS WHERE CODIGO = _ORIGEM)
	-- VERIFICA SE O REGISTRO JÁ NÃO EXISTE NO CONJUNTO DE DESTINO PELO ID
	AND REGISTRO NOT IN (
		SELECT REGISTRO FROM NS.CONJUNTOSTRANSPORTADORAS C
		JOIN NS.ESTABELECIMENTOSCONJUNTOS EC ON (EC.CONJUNTO = C.CONJUNTO)
		WHERE EC.CADASTRO=8 AND EC.ESTABELECIMENTO = (SELECT ESTABELECIMENTO FROM NS.ESTABELECIMENTOS WHERE CODIGO= _DESTINO))
	-- VERIFICA SE O REGISTRO JÁ NÃO EXISTE NO CONJUNTO DE TRANSPORTADORAS DO DESTINO PELO CNPJ
	AND REGISTRO NOT IN (
		SELECT ID FROM NS.PESSOAS
		WHERE CNPJ NOT IN (
			SELECT CNPJ FROM NS.PESSOAS WHERE ID IN (
				SELECT REGISTRO FROM NS.CONJUNTOSTRANSPORTADORAS C
				JOIN NS.ESTABELECIMENTOSCONJUNTOS EC ON (EC.CONJUNTO = C.CONJUNTO)
				WHERE EC.CADASTRO=8 AND EC.ESTABELECIMENTO = (SELECT ESTABELECIMENTO FROM NS.ESTABELECIMENTOS WHERE CODIGO= _DESTINO))));
	--
	
	RAISE NOTICE 'CONJUNTO DE PRODUTOS';
	
	INSERT INTO NS.CONJUNTOSPRODUTOS(REGISTRO, CONJUNTO)
	SELECT REGISTRO, ESTABELECIMENTOSCONJUNTOS.CONJUNTO
	FROM NS.ESTABELECIMENTOSCONJUNTOS, tmpconjuntosprodutos
	WHERE ESTABELECIMENTOSCONJUNTOS.CADASTRO = 0
	AND ESTABELECIMENTOSCONJUNTOS.ESTABELECIMENTO=(SELECT ESTABELECIMENTO FROM NS.ESTABELECIMENTOS WHERE CODIGO = _ORIGEM)
	-- VERIFICA SE O REGISTRO JÁ NÃO EXISTE NO CONJUNTO DE DESTINO PELO ID
	AND REGISTRO NOT IN (
		SELECT REGISTRO FROM NS.CONJUNTOSPRODUTOS C
		JOIN NS.ESTABELECIMENTOSCONJUNTOS EC ON (EC.CONJUNTO = C.CONJUNTO)
		WHERE EC.CADASTRO=0 AND EC.ESTABELECIMENTO = (SELECT ESTABELECIMENTO FROM NS.ESTABELECIMENTOS WHERE CODIGO= _DESTINO));
	--
	
	RAISE NOTICE 'CONJUNTO DE UNIDADES';
	
	INSERT INTO NS.CONJUNTOSUNIDADES(REGISTRO, CONJUNTO)
	SELECT REGISTRO, ESTABELECIMENTOSCONJUNTOS.CONJUNTO
	FROM NS.ESTABELECIMENTOSCONJUNTOS, tmpconjuntosunidades
	WHERE ESTABELECIMENTOSCONJUNTOS.CADASTRO = 1
	AND ESTABELECIMENTOSCONJUNTOS.ESTABELECIMENTO=(SELECT ESTABELECIMENTO FROM NS.ESTABELECIMENTOS WHERE CODIGO = _ORIGEM)
	-- VERIFICA SE O REGISTRO JÁ NÃO EXISTE NO CONJUNTO DE DESTINO PELO ID
	AND REGISTRO NOT IN (
		SELECT REGISTRO FROM NS.CONJUNTOSUNIDADES C
		JOIN NS.ESTABELECIMENTOSCONJUNTOS EC ON (EC.CONJUNTO = C.CONJUNTO)
		WHERE EC.CADASTRO=1 AND EC.ESTABELECIMENTO = (SELECT ESTABELECIMENTO FROM NS.ESTABELECIMENTOS WHERE CODIGO= _DESTINO));
	--
	
	RAISE NOTICE 'CONJUNTO DE SERVIÇOS';
	
	INSERT INTO NS.CONJUNTOSSERVICOS(REGISTRO, CONJUNTO)
	SELECT REGISTRO, ESTABELECIMENTOSCONJUNTOS.CONJUNTO
	FROM NS.ESTABELECIMENTOSCONJUNTOS, tmpconjuntosservicos
	WHERE ESTABELECIMENTOSCONJUNTOS.CADASTRO = 3
	AND ESTABELECIMENTOSCONJUNTOS.ESTABELECIMENTO=(SELECT ESTABELECIMENTO FROM NS.ESTABELECIMENTOS WHERE CODIGO = _ORIGEM)
	-- VERIFICA SE O REGISTRO JÁ NÃO EXISTE NO CONJUNTO DE DESTINO PELO ID
	AND REGISTRO NOT IN (
		SELECT REGISTRO FROM NS.CONJUNTOSSERVICOS C
		JOIN NS.ESTABELECIMENTOSCONJUNTOS EC ON (EC.CONJUNTO = C.CONJUNTO)
		WHERE EC.CADASTRO=3 AND EC.ESTABELECIMENTO = (SELECT ESTABELECIMENTO FROM NS.ESTABELECIMENTOS WHERE CODIGO= _DESTINO));
	--

-- EXCLUI CONFIGURAÇÕES
	RAISE NOTICE '%', 'EXCLUINDO CONFIGURAÇÕES DO GRUPO EMPRESARIAL ' || _ORIGEM;
	DELETE FROM ns.configuracoes WHERE grupoempresarial =
		(SELECT grupoempresarial FROM ns.gruposempresariais WHERE codigo = _ORIGEM);

-- ATUALIZA GRUPO
	RAISE NOTICE 'ATUALIZANDO O GRUPO EMPRESARIAL DA EMPRESA: %', _ORIGEM;
	UPDATE NS.EMPRESAS
		SET GRUPOEMPRESARIAL =
			(SELECT GRUPOEMPRESARIAL FROM NS.GRUPOSEMPRESARIAIS WHERE CODIGO= _DESTINO)
	WHERE  GRUPOEMPRESARIAL =
		(SELECT GRUPOEMPRESARIAL FROM NS.GRUPOSEMPRESARIAIS WHERE CODIGO = _ORIGEM);
	
-- EXCLUI CONTABILIZAÇÃO POR CLASSIFICACAOFINANCEIRA
	RAISE NOTICE '%', 'EXCLUINDO AS CLASSIFICAÇÕES FINANCEIRAS POR CONTAS NA CONTABILIZAÇÃO DO GRUPO EMPRESARIAL ' || _ORIGEM;
	DELETE FROM CONTABILIZACAO.CLASSIFICACAOFINANCEIRAPORCONTAS
	WHERE GRUPOEMPRESARIAL=
		(SELECT GRUPOEMPRESARIAL FROM NS.GRUPOSEMPRESARIAIS WHERE CODIGO=_ORIGEM);

-- EXCLUI RATEIOS FINANCEIROS
	RAISE NOTICE '%', 'EXCLUINDO OS RATEIOS FINANCEIROS DO GRUPO EMPRESARIAL ' || _ORIGEM;
	DELETE FROM FINANCAS.RATEIOSFINANCEIROS WHERE CLASSIFICACAOFINANCEIRA IN
	(SELECT CLASSIFICACAOFINANCEIRA FROM FINANCAS.CLASSIFICACOESFINANCEIRAS WHERE GRUPOEMPRESARIAL =
		(SELECT GRUPOEMPRESARIAL FROM NS.GRUPOSEMPRESARIAIS WHERE CODIGO = _ORIGEM));
	
-- EXCLUI CLASSIFICAÇÕES FINANCEIRAS
	RAISE NOTICE '%', 'EXCLUINDO AS CLASSIFICAÇÕES FINANCEIRAS DO GRUPO EMPRESARIAL ' || _ORIGEM;
	DELETE FROM FINANCAS.CLASSIFICACOESFINANCEIRAS WHERE GRUPOEMPRESARIAL = 
		(SELECT GRUPOEMPRESARIAL FROM NS.GRUPOSEMPRESARIAIS WHERE CODIGO=_ORIGEM);

-- EXCLUI GRUPO
	RAISE NOTICE '%', 'EXCLUINDO O GRUPO EMPRESARIAL ' || _ORIGEM;
	DELETE FROM ns.gruposempresariais WHERE codigo = _ORIGEM;

--EXCLUI TABELAS TEMPORÁRIAS
	RAISE NOTICE 'EXCLUINDO TABELAS TEMPORARIAS';

	DROP TABLE tmpconjuntosclientes;
	DROP TABLE tmpconjuntosfichas;
	DROP TABLE tmpconjuntosfornecedores;
	DROP TABLE tmpconjuntosprodutos;
	DROP TABLE tmpconjuntosservicos;
	DROP TABLE tmpconjuntostransportadoras;
	DROP TABLE tmpconjuntosunidades;

	RAISE NOTICE 'CONCLUÍDO!';
END
$$;
